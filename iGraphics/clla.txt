its a very rich ast representation compared to other languages
very accurate representation of source locations for every node in ast
type resolved as it comes from c++,its huge more than 100k lines of c++ code

first class we need to handle first is the ASTCOntext; alot of the node
in the ast just keep small identifiers that point into the stuff in ast context

gives you translation unit decl and withe that basically get into the core classes of clang ast

those are declaration statements and types ; those are the classes that
have identitny in the clang ast and also have point identity
which means if you have two of them  u can compare them to figure out point to figure out

each of those classes is the base of a whole hierarchy of classes
there are lots of diff kind of declarations and they are all inherited from decl

bindary operator is an expression . in clang ast expression are statements

types can be nested like a pointer type

these are the three basic classes of the clang ast . there are also many other classes

con:
Development of the new front-end was started out of a need
 for a compiler that allows better diagnostics, better 
 integration with IDEs, a license that is compatible with
 commercial products, and a nimble compiler that is easy 
 to develop and maintain. All of these were motivations 
 for starting work on a new front-end that could meet 
 these needs.If you are looking for source analysis or source-to-source 
 transformation tools, Clang is probably a great solution for you. 